// <auto-generated />
using System;
using Booking.Infrastructure.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Booking.Persistence.Migrations
{
    [DbContext(typeof(BookingSQLServerDbContext))]
    partial class BookingSQLServerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Booking.Application.Models.SQLServer.BillingPayment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BillingType")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<Guid>("HotelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ReservationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("billingpayments", "dbo");
                });

            modelBuilder.Entity("Booking.Application.Models.SQLServer.Hotel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("HotelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("hotels", "dbo");
                });

            modelBuilder.Entity("Booking.Application.Models.SQLServer.HotelRoom", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HotelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RoomType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("hotelrooms", "dbo");
                });

            modelBuilder.Entity("Booking.Domain.Models.SQLServer.HotelRoomPrice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HotelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HotelRoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RoomType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.HasIndex("HotelRoomId");

                    b.ToTable("hotelroomprices", "dbo");
                });

            modelBuilder.Entity("Booking.Application.Models.SQLServer.BillingPayment", b =>
                {
                    b.HasOne("Booking.Application.Models.SQLServer.Hotel", "Hotel")
                        .WithMany("BillingPayments")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("Booking.Application.Models.SQLServer.HotelRoom", b =>
                {
                    b.HasOne("Booking.Application.Models.SQLServer.Hotel", "Hotel")
                        .WithMany("HotelRooms")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("Booking.Domain.Models.SQLServer.HotelRoomPrice", b =>
                {
                    b.HasOne("Booking.Application.Models.SQLServer.Hotel", "Hotel")
                        .WithMany("HotelRoomPrices")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Booking.Application.Models.SQLServer.HotelRoom", "HotelRoom")
                        .WithMany("HotelRoomPrices")
                        .HasForeignKey("HotelRoomId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Hotel");

                    b.Navigation("HotelRoom");
                });

            modelBuilder.Entity("Booking.Application.Models.SQLServer.Hotel", b =>
                {
                    b.Navigation("BillingPayments");

                    b.Navigation("HotelRoomPrices");

                    b.Navigation("HotelRooms");
                });

            modelBuilder.Entity("Booking.Application.Models.SQLServer.HotelRoom", b =>
                {
                    b.Navigation("HotelRoomPrices");
                });
#pragma warning restore 612, 618
        }
    }
}
